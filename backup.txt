import './App.css';
import Globe from './components/Globe';
import styled from "styled-components";
import { useRef, useState} from 'react';
import { ThemeProvider } from "styled-components";
import { OrbitControls, Stars, Loader, Text, Html} from '@react-three/drei';
import { Canvas, useFrame, useThree } from '@react-three/fiber';
import { Suspense } from "react";
import { IntroText } from './components/Text/IntroText';
import { GlobalStyles } from './fonts/GlobalStyles';
import * as THREE from 'three';

function Dolly() {
  // This one makes the camera move in and out
  useFrame(({ clock, camera, cameraConfig }) => {
    //camera.position.z = 10 + Math.sin(clock.getElapsedTime()) * 2
    camera = cameraConfig;
  })
  return null
}

function App() {

  const deg2rad = degrees => degrees * (Math.PI / 180);

  function Caption({ children }) {
    const { width } = useThree((state) => state.viewport)
    return (
      <Text
        position={[10, 0, -5]}
        lineHeight={0.8}
        font="/SpaceMission.otf"
        fontSize={width / 12}
        material-toneMapped={false}
        anchorX="center"
        anchorY="middle">
        {children}
      </Text>
    )
  }

  const vec = new THREE.Vector3()

  function ProceedButton({ time, camera, ...props }) {

    const [clicked, setClicked] = useState(false)
    const click = e => {
      console.log('Test')
      cameraConfig.position = [0, 0, 5]; 
      //Window.camera.position.x = 10; 
      //Window.camera.updateProjectionMatrix();
    }

    return (
      <mesh {...props}>
        <Html >
          <div>
            <button onClick={click} class="button">Proceed</button>
          </div>
        </Html>
      </mesh>
    )
  }

  const CanvasContainer = styled.div`
    width: 100%; 
    height: 100%
  `;

  const camera = useRef();
  const cameraConfig = {ref:camera, fov: 75, position: [0, 0, 0]};

  return (
      <CanvasContainer>
        <Canvas concurrent>
          <Dolly />
          <perspectiveCamera {...cameraConfig}>
              <Suspense fallback={null}>
                <pointLight color="#f6f3ea" position={[5, -1, 5]} intensity={1.6} />
                <Stars
                  radius={500}
                  depth={60}
                  count={20000}
                  factor={7}
                  saturation={0}
                  fade={true}
                  speed = {10}
                />
                <Globe position={[-2, 0, 0]}/>
                <Caption>{`ASCENT\nSPACE CORP`}</Caption>

                <ProceedButton position={[5, -1, -2]} />
              </Suspense>
            </perspectiveCamera>
        </Canvas>
        <Loader />
      </CanvasContainer>
  );
}

export default App;
